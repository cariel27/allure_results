{"name": "test_mark_function_by_process_tag_working_parametrized_working[11-11-22]", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '/home/travis/build/cariel27/pytest_example/imgs/python.png'", "trace": "item = <Function test_mark_function_by_process_tag_working_parametrized_working[11-11-22]>\n\n    def pytest_runtest_setup(item: Item):\n        # called before pytest_runtest_call(item).\n    \n        def get_my_custom_marks(item: Item):\n            \"\"\":return list with the marks of the test that are included in marks_to_run or marks_to_skip \"\"\"\n            marks = []\n            for mark in item.own_markers:\n                if mark.name not in MARKERS_PROCESS_TAG:\n                    marks.append(mark.name)\n            return marks\n    \n        def get_test_item(item: Item):\n            test_dict = {}\n            node_id = item.nodeid\n            process_tag = []\n            is_process_tag = False\n    \n            for marker in item.iter_markers(name=\"test_process_marks\"):\n                process_tag.append(marker.args[0])\n                is_process_tag = True\n    \n            if not is_process_tag:\n                is_process_tag = False\n    \n            other_marks = get_my_custom_marks(item)\n            test_dict.update({node_id:\n                                  {\"test_process_marks\": process_tag,\n                                   \"is_process_tag\": is_process_tag,\n                                   \"test_marks\": other_marks,\n                                   \"test_name\": item.name}})\n    \n            return test_dict\n    \n        test_item = get_test_item(item=item)\n        item_id = list(test_item.keys())[0]\n    \n        tests_list.append(item_id)\n    \n        process_test_marks(test_item=test_item, item_id=item_id)\n    \n    \n        import allure\n        screenshot_name = \"Python image\"\n        screenshot_path = util.get_project_root_path() + \"/imgs/python.png\"\n        allure.attach.file(source=screenshot_path,\n>                              name=screenshot_name, attachment_type=allure.attachment_type.PNG)\n\nconftest.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/allure_commons/_allure.py:151: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/allure_pytest/listener.py:211: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/allure_commons/reporter.py:113: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/allure_commons/logger.py:48: in report_attached_file\n    shutil.copy2(source, destination)\n../../../virtualenv/python3.6.3/lib/python3.6/shutil.py:257: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = '/home/travis/build/cariel27/pytest_example/imgs/python.png'\ndst = '/home/travis/build/cariel27/pytest_example/allure_results/b0ef0cb4-fde7-45af-b20f-b5d2a5ff3e83-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        for fn in [src, dst]:\n            try:\n                st = os.stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n    \n        if not follow_symlinks and os.path.islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: '/home/travis/build/cariel27/pytest_example/imgs/python.png'\n\n../../../virtualenv/python3.6.3/lib/python3.6/shutil.py:120: FileNotFoundError"}, "attachments": [{"name": "Python image", "source": "b0ef0cb4-fde7-45af-b20f-b5d2a5ff3e83-attachment.png", "type": "image/png"}, {"name": "log", "source": "0f07154e-c7c6-407b-835c-7d3d55afe948-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a8ced94b-a7ac-4072-8515-f5d197155bb3-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9e3430f9-84a1-481e-ba96-be6b10807ee5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "a", "value": "11"}, {"name": "b", "value": "11"}, {"name": "expected", "value": "22"}], "start": 1554841161748, "stop": 1554841161748, "uuid": "0b9fa0fe-2cff-4274-abf5-9dd5265a1089", "historyId": "c650c889c093e774d8d98d7e1df745e1", "fullName": "tests.test_report.TestClass#test_mark_function_by_process_tag_working_parametrized_working[11-11-22]", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_report"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "travis-job-e84331a7-48c6-453f-ad15-2a5abd8bf3f8"}, {"name": "thread", "value": "3546-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_report"}]}